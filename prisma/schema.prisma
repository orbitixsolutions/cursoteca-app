// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// --------------------------------------
// ENUMS //
// --------------------------------------

enum Role {
  DIRECTIVE
  ADMIN
  ENROLLED
}

enum CATEGORIES_ENUM {
  ALL
  LOGISTICS
  PHARMACEUTICALS
  OTHERS
  NONE
}

enum EDUCATIONAL_LEVELS_ENUM {
  PRIMARY
  FIRST
  SECOND
  THIRD
  FOURTH
  SEVENTH
  EIGHTH
  NINTH
  THIRD_STUDIES
  NONE
}

enum STATUS_ENUM {
  INTERVIEW
  STAGE_1
  STAGE_2
  STAGE_3
  APPROVED
  NOT_APPROVED
  ALTERNATE
  NONE
}

// --------------------------------------
// USER TABLE //
// --------------------------------------

model User {
  id       String  @id @default(uuid())
  name     String?
  email    String  @unique
  password String
  eca      String?
  role     Role    @default(ENROLLED)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// --------------------------------------
// COURSE TABLE //
// --------------------------------------

model Course {
  id               String                  @id @default(uuid())
  title            String
  description      String
  ecaId            String
  isVisible        Boolean                 @default(false)
  imageUrl         String                  @default("NO_IMAGE")
  category         CATEGORIES_ENUM         @default(NONE)
  ageRange         Int[]                   @default([10, 20])
  educationalLevel EDUCATIONAL_LEVELS_ENUM @default(NONE)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  enrollment Enrollment[]
}

// --------------------------------------
// STUDENTS TABLE //
// --------------------------------------

model Inscriptions {
  id                  String                  @id @default(uuid())
  firstNames          String
  lastNames           String
  phoneNumber         String
  email               String
  documentId          String                  @unique
  eca                 String
  dateOfBorn          DateTime
  province            String
  address             String
  lastNameInstitution String
  educationalLevel    EDUCATIONAL_LEVELS_ENUM @default(NONE)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  enrollment Enrollment[]
}

model Enrollment {
  id String @id @default(uuid())

  inscriptionId String
  courseId      String
  eca           String
  isCandidate Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  inscription       Inscriptions        @relation(fields: [inscriptionId], references: [documentId], onDelete: Cascade)
  course            Course              @relation(fields: [courseId], references: [id], onDelete: Cascade)
  enrollmentStatus  EnrollmentStatus[]
  enrollmentComment EnrollmentComment[]

  @@index([courseId, inscriptionId])
}

model EnrollmentComment {
  id           String @id @default(uuid())
  enrollmentId String

  comment String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  enrollment Enrollment @relation(fields: [enrollmentId], references: [id], onDelete: Cascade)
}

model EnrollmentStatus {
  id           String @id @default(uuid())
  enrollmentId String

  status    STATUS_ENUM @default(NONE)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  enrollment Enrollment @relation(fields: [enrollmentId], references: [id], onDelete: Cascade)
}
