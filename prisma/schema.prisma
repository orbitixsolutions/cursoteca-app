// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// --------------------------------------
// ENUMS //
// --------------------------------------

enum Role {
  DIRECTIVE
  ADMIN
  USER
}

enum CATEGORIES_ENUM {
  ALL
  LOGISTICS
  PHARMACEUTICALS
  OTHERS
  NONE
}

enum EDUCATIONAL_LEVELS_ENUM {
  NONE
  PRIMARY
  BASIC_CYCLE
  SECONDARY
  UNIVERSITY
}

enum STATUS_ENUM {
  PENDING
  APPROVED
  FINISHED
  CANCELLED
}

// --------------------------------------
// USER TABLE //
// --------------------------------------

model User {
  id       String  @id @default(uuid())
  name     String?
  email    String  @unique
  password String
  eca      String?
  role     Role    @default(USER)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// --------------------------------------
// COURSE TABLE //
// --------------------------------------

model Course {
  id               String                  @id @default(uuid())
  title            String
  description      String
  ecaId            String
  isVisible        Boolean                 @default(false)
  imageUrl         String                  @default("NO_IMAGE")
  category         CATEGORIES_ENUM         @default(NONE)
  ageRange         Int[]                   @default([10, 20])
  educationalLevel EDUCATIONAL_LEVELS_ENUM @default(NONE)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  enrollment Enrollment[]
}

// --------------------------------------
// STUDENTS TABLE //
// --------------------------------------

model Student {
  id                  String                  @id @default(uuid())
  firstNames          String
  lastNames           String
  phoneNumber         String
  email               String
  documentId          String                  @unique
  eca                 String
  dateOfBorn          DateTime
  province            String
  address             String
  lastNameInstitution String
  educationalLevel    EDUCATIONAL_LEVELS_ENUM @default(NONE)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  enrollment Enrollment[]
}

// --------------------------------------
// ENROLLMENTS TABLE //
// --------------------------------------

model Enrollment {
  id String @id @default(uuid())

  courseId  String
  studentId String
  eca       String

  isCompleted Boolean     @default(false)
  status      STATUS_ENUM @default(PENDING)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  student Student @relation(fields: [studentId], references: [id], onDelete: Cascade)
  course  Course  @relation(fields: [courseId], references: [id], onDelete: Cascade)

  @@unique([studentId, courseId])
}
